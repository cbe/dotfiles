#!/usr/bin/env bash

# Arguments
COMMIT_MSG_FILE=$1 # This is `.git/COMMIT_EDITMSG`
COMMIT_SOURCE=$2   # Possible values are none (git commit), message (git commit -m <msg>), template, merge, squash, or commit
SHA1=$3            # The SHA-1 of the commit that's going to be created

# Helper variables
BRANCH_NAME=$(git symbolic-ref --short HEAD)
BRANCH_NAME_PATTERN="[:upper:]*-[:digit:]*"
STORY_ID=$(echo $BRANCH_NAME | cut -d '_' -f 1)
HAS_STORY_ID_IN_COMMIT_MSG=$(grep -v '^#' $COMMIT_MSG_FILE | grep -c "$STORY_ID")

if [ -n "$BRANCH_NAME" ] \
  && [[ $BRANCH_NAME =~ $BRANCH_NAME_PATTERN ]] \
  && [ "$HAS_STORY_ID_IN_COMMIT_MSG" -eq "0" ]
then
  if [ -z $COMMIT_SOURCE ]; then # Handle commit message via $EDITOR
    sed -i.bak -e "1s/^/\\
\\
$STORY_ID/" $COMMIT_MSG_FILE
  elif [[ $COMMIT_SOURCE == "message" ]]; then # Handle `-f` argument
    echo "

$STORY_ID" >> $COMMIT_MSG_FILE
  fi
fi
